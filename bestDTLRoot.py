#Python function to find best DTL rooting among a list of rooting possibilities.

#Input: file to species tree, file to list of gene trees
#Output: the gene tree with the most optimal rooting in newick format
#Requires: Ranger or Optroot?

import os
import subprocess
from getDTLCost import getDTLCost

def findBestDTLRooting(speciesTree, geneTrees):

    #Initialize gene tree data structures. geneCosts contains tuples with gene Tree and rec cost
    geneCosts = []

    for geneDict in geneTrees:
        geneCosts.append({'newick': geneDict['newick'], 'mad_score': geneDict['mad_score'], 'dtl_score': None})

    for i in range(len(geneCosts)):
        geneTree = geneCosts[i]['newick']
        geneCosts[i]['dtl_score'] = getDTLCost(speciesTree, geneTree)
    
    #initialize Cost and return tree data structure
    minCost = -1
    optimalGeneTrees = []

    #for i in geneCosts:
        #print(i)

    for i in range(len(geneCosts)):
        if geneCosts[i]['dtl_score'] < minCost or minCost == -1:
            minCost = geneCosts[i]['dtl_score']
            optimalGeneTrees = [geneCosts[i]]
        elif geneCosts[i]['dtl_score'] == minCost:
            optimalGeneTrees.append(geneCosts[i])
    
    #add case here for mad score
    minMad = -1
    returnTrees = []

    if len(optimalGeneTrees) > 1:
        for treeDict in optimalGeneTrees:
            if treeDict['mad_score'] < minMad or minMad == -1:
                minMad = treeDict['mad_score']
                returnTrees = [treeDict['newick']]
            elif treeDict['mad_score'] == minMad:
                returnTrees.append(treeDict['newick'])
    else:
        returnTrees = [optimalGeneTrees[0]['newick']]
    

    
    #Need to edit this. If multiple trees with an equal optimal cost, return the tree with the best MAD score. Else, return all optimal trees.
    print("Number of Trees with Min DTL Cost: ", len(optimalGeneTrees))
    print("Number of Optimal Trees: ", len(returnTrees))
    print("Reconciliation Cost: ", minCost)
    print("Now Printing Trees.")
    print("------------------------")
    for i in returnTrees:
        print(i)
    
    return returnTrees

#tempGene = [{"newick": "[&R] (H98_0:0.554132875,(H99_1:0.837352933,(((((H126_3:0.290020346,(((H127_4:0.124825483,(H128_5:0.192342693,H129_6:0.276344652):0.135161749):0.013999781,(H132_9:0.246413533,H133_10:0.110395905):0.0508183416):0.0963745164,(H136_13:0.0964447798,(H147_14:0.00630926373,H148_15:0.000883305359):0.0298398384):0.20844758):0.0101313214):0.427444685,(H139_20:0.551360711,(H140_21:0.0993535981,H141_22:0.235447393):0.188862896):0.472954057):0.115232863,(H152_26:0.404139778,(H155_27:0.0199846648,H156_28:0.035068361):0.222372032):0.149829375):0.760960355,(H38_32:0.625327558,H105_33:0.131405654):0.841624154):0.484880096,(((((H112_139:0.92412987,((H115_140:0.112046519,H116_141:0.0826280669):0.0767268592,(H118_143:0.102823195,H119_144:0.150774239):0.227727657):0.15839281):0.0797965381,H123_148:1.2214899):0.280178222,((((H139_150:0.337391925,H152_151:0.265803867):0.209260149,(H140_153:0.240466857,H141_154:0.225760716):0.123672032):0.317217884,H144_157:0.822990332):0.219561226,(H150_159:0.774337224,((H152_160:0.210617341,H153_161:0.323004902):0.0538876967,(H116_163:0.0776515428,(H155_164:0.00396750546,H156_165:0.0342341829):0.00644234143):0.166727065):0.224844973):0.290735109):0.239395334):0.172195091,(H113_172:0.802854342,(((H174_173:0.0114997441,H175_174:0.0277704132):0.133140771,(H102_176:0.191533494,H177_177:0.20759036):0.0900187714):0.558333057,H179_180:0.140367292):0.00133438536):1.0303507):0.741071466,(((((H126_37:0.130827219,((((H128_38:0.0546872891,H126_39:0.0734073341):0.137690546,H129_41:0.260914863):0.140892688,H133_43:0.209966992):0.0651957661,H136_45:0.0553994705):0.00608092488):0.572558322,((H139_48:0.50205861,(H140_49:0.188351213,H141_50:0.283964173):0.171333763):0.213935189,H144_53:0.242878647):0.0757222265):0.103909832,(((H147_56:0.0101363811,H148_57:0.00709582177):0.757235719,H150_59:0.571051095):0.0279636355,((H152_61:0.436951095,(H153_62:0.0404720721,H126_63:0.0676550223):0.154705287):0.045556475,(H155_66:0.0444103202,H156_67:0.00819672907):0.0760582348):0.0375876362):0.516048084):1.25492818,((((((H62_72:0.014218139,H63_73:0.0166452193):0.053747255,H65_75:0.0743688529):0.0548797589,H67_77:0.509766991):0.0784258154,H67_79:0.322071429):0.0182278024,((H69_81:0.0509028835,H70_82:0.167301378):0.385711618,H72_84:0.459987264):0.0471074709):0.306132586,((H75_87:0.378478373,((H76_88:0.212925662,((H77_89:0.03179022,H77_90:0.0496265496):0.113523887,H20_92:0.136811764):0.00514897065):0.138857621,(H76_95:0.070695254,H77_96:0.155898812):0.128215341):0.0258715001):0.211551622,H80_100:0.155252953):0.17263536):0.803171479):0.000287495591,(((H87_104:0.0226816135,((H88_105:0.0398345521,((H89_106:0.0061943072,H187_107:0.00662519854):0.0414359057,H90_109:0.0685649653):0.116037462):0.0069299873,H93_112:0.26925456):0.0562430362):0.111136512,((H87_115:0.0185546698,H177_116:0.0387468622):0.0855248119,((H88_118:0.311398972,(H89_119:0.152543791,H90_120:0.0563196871):0.110595792):0.0120933456,(H93_123:0.00178289677,H67_124:0.00294007735):0.154076392):0.115608721):0.0447563605):0.320912909,(H144_129:0.306207017,((H47_130:0.0131671405,H87_131:0.044991561):0.217842411,H88_133:0.465389822):0.089098693):0.0990855687):1.114542):0.573660398):0.0366648432):1.03791154):0.554132875);", "mad_score": 0.24507952145634356}, {"newick": "[&R] (H99_0:0.554132875,(H98_1:0.837352933,(((((H126_3:0.290020346,(((H127_4:0.124825483,(H128_5:0.192342693,H129_6:0.276344652):0.135161749):0.013999781,(H132_9:0.246413533,H133_10:0.110395905):0.0508183416):0.0963745164,(H136_13:0.0964447798,(H147_14:0.00630926373,H148_15:0.000883305359):0.0298398384):0.20844758):0.0101313214):0.427444685,(H139_20:0.551360711,(H140_21:0.0993535981,H141_22:0.235447393):0.188862896):0.472954057):0.115232863,(H152_26:0.404139778,(H155_27:0.0199846648,H156_28:0.035068361):0.222372032):0.149829375):0.760960355,(H38_32:0.625327558,H105_33:0.131405654):0.841624154):0.484880096,(((((H112_139:0.92412987,((H115_140:0.112046519,H116_141:0.0826280669):0.0767268592,(H118_143:0.102823195,H119_144:0.150774239):0.227727657):0.15839281):0.0797965381,H123_148:1.2214899):0.280178222,((((H139_150:0.337391925,H152_151:0.265803867):0.209260149,(H140_153:0.240466857,H141_154:0.225760716):0.123672032):0.317217884,H144_157:0.822990332):0.219561226,(H150_159:0.774337224,((H152_160:0.210617341,H153_161:0.323004902):0.0538876967,(H116_163:0.0776515428,(H155_164:0.00396750546,H156_165:0.0342341829):0.00644234143):0.166727065):0.224844973):0.290735109):0.239395334):0.172195091,(H113_172:0.802854342,(((H174_173:0.0114997441,H175_174:0.0277704132):0.133140771,(H102_176:0.191533494,H177_177:0.20759036):0.0900187714):0.558333057,H179_180:0.140367292):0.00133438536):1.0303507):0.741071466,(((((H126_37:0.130827219,((((H128_38:0.0546872891,H126_39:0.0734073341):0.137690546,H129_41:0.260914863):0.140892688,H133_43:0.209966992):0.0651957661,H136_45:0.0553994705):0.00608092488):0.572558322,((H139_48:0.50205861,(H140_49:0.188351213,H141_50:0.283964173):0.171333763):0.213935189,H144_53:0.242878647):0.0757222265):0.103909832,(((H147_56:0.0101363811,H148_57:0.00709582177):0.757235719,H150_59:0.571051095):0.0279636355,((H152_61:0.436951095,(H153_62:0.0404720721,H126_63:0.0676550223):0.154705287):0.045556475,(H155_66:0.0444103202,H156_67:0.00819672907):0.0760582348):0.0375876362):0.516048084):1.25492818,((((((H62_72:0.014218139,H63_73:0.0166452193):0.053747255,H65_75:0.0743688529):0.0548797589,H67_77:0.509766991):0.0784258154,H67_79:0.322071429):0.0182278024,((H69_81:0.0509028835,H70_82:0.167301378):0.385711618,H72_84:0.459987264):0.0471074709):0.306132586,((H75_87:0.378478373,((H76_88:0.212925662,((H77_89:0.03179022,H77_90:0.0496265496):0.113523887,H20_92:0.136811764):0.00514897065):0.138857621,(H76_95:0.070695254,H77_96:0.155898812):0.128215341):0.0258715001):0.211551622,H80_100:0.155252953):0.17263536):0.803171479):0.000287495591,(((H87_104:0.0226816135,((H88_105:0.0398345521,((H89_106:0.0061943072,H187_107:0.00662519854):0.0414359057,H90_109:0.0685649653):0.116037462):0.0069299873,H93_112:0.26925456):0.0562430362):0.111136512,((H87_115:0.0185546698,H177_116:0.0387468622):0.0855248119,((H88_118:0.311398972,(H89_119:0.152543791,H90_120:0.0563196871):0.110595792):0.0120933456,(H93_123:0.00178289677,H67_124:0.00294007735):0.154076392):0.115608721):0.0447563605):0.320912909,(H144_129:0.306207017,((H47_130:0.0131671405,H87_131:0.044991561):0.217842411,H88_133:0.465389822):0.089098693):0.0990855687):1.114542):0.573660398):0.0366648432):1.03791154):0.554132875);", "mad_score": 0.23507952145634356}]
#findBestDTLRooting("../AllSimulatedDatasets/speciesTrees/speciestree1.pruned.tree", tempGene)

    